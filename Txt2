Hotfix Branch

1. Identifying and Fixing Bugs: A hotfix branch named hotfix was created from the main

branch for emergency bugs and urgent issues in the production code. Once the problem was fixed, the changes were committed.

2. Merging the Hotfix: The hot fix branch was merged into the main branch by pull request from user I side in GitHub. It was also merged back into the develop branch to keep it up- to-date.

Challenges and Solutions

Simulating Multiple Collaborators:

Challenge: Simulating multiple collaborators on a single laptop required managing multiple terminals.

Solution: Opened two separate Git terminals to represent different collaborators. Careful attention was to avoid conflicts.

Ensuring Branch Consistency:

Challenge: Keeping the branches consistent with any changes from other users and keeping develop branch consistent with changes from release and hotfix branches.

Solution: Always pull from server before push to the server and ensure merging release and hotfix branches back into develop after merging them into main.

Learning Experience and Insights

I gained hands-on experience with Git and GitHub, enhancing my understanding of version control in a team setting.

I understand the principles and commands of Gitflow and get a chance to be in practical situations in which different team members collaborate different parts of a project simultaneously so, team members can guarantee efficient environment for collaboration and development with an organized codebase by effectively using feature branches, a development branch, a release branch, and a hotfix branch.
